# Spring properties
spring.application.name=smith-ldap-service
spring.freemarker.enabled=false
spring.thymeleaf.cache=false
spring.thymeleaf.prefix=classpath:/smith-ldap-server/templates/    # Trailing / mandatory
# Template location for this application only

# Map the error path to error template (for Thymeleaf)
error.path: /error

# HTTP Server
# HTTP (Tomcat) port
server.port: 8082

# Discovery Server Access
#  1. DEV ONLY: Reduce the lease renewal interval to speed up registration
#  2. Define URL of registration server (defaultZone)
#eureka.client.serviceUrl.defaultZone=http://localhost:1111/eureka/
# DO NOT DO THIS IN PRODUCTION
eureka.instance.leaseRenewalIntervalInSeconds=5 

#  3. If using the Angel release-train ONLY, give the process a unique instance id 
#     so that multiple instances can register when running on SAME host.  This is
#     not needed since release-train Brixton.
#     NOTE-1: spring.application.instance_id is only set when run on Cloud Foundry,
#             so we fallback on the server-port when it is not defined
#     NOTE-2: Syntax ${x:${y}} = use $x if set, otherwise use $y
#   metadataMap:
#     instanceId: ${spring.application.name}:${spring.application.instance_id:${server.port}}


# Enable actuator access without security checks - DEVELOPEMENT ONLY
# management.security.enabled: false   Spring Boot 1.5 property
management.endpoints.web.exposure.include: '*'

# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.db2datasource.jdbcUrl=jdbc:db2://stagingdb.smithportal.com:50000/portal:returnAlias=0;socketTimeout=300;
spring.db2datasource.username=db2inst1
spring.db2datasource.password=db2123!
spring.db2datasource.driver-class-name=com.ibm.db2.jcc.DB2Driver
# Keep the connection alive if idle for a long time (needed in production)
spring.db2datasource.testWhileIdle=true
spring.db2datasource.validationQuery=SELECT 1

# ===============================
# = AS400 DATA SOURCE
# ===============================
# Set here configurations for the database connection
spring.as400.jdbcUrl=jdbc:as400://SDCPROD;naming=system;libraries=r37files,r37mods,r37modsdta;translate binary=true;prompt=false;socketTimeout=300
spring.as400.username=webusr
spring.as400.password=w3bd3v
spring.as400.driver-class-name=com.ibm.as400.access.AS400JDBCDriver
# Keep the connection alive if idle for a long time (needed in production)
spring.as400.testWhileIdle=true
spring.as400.validationQuery=SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "create-drop" the database
# schema will be automatically created afresh for every start of application
spring.jpa.hibernate.ddl-auto=none
# Naming strategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.DB2Dialect

#logging.level.org.springframework.web.client=DEBUG
#logging.level.org.apache.http=DEBUG
#log4j.logger.httpclient.wire=DEBUG
#logging.level.org.springframework.security.oauth2=DEBUG
spring.jackson.serialization-inclusion=non_null

#logging.level.org.hibernate.SQL=DEBUG
#logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
#logging.level.org.hibernate: ERROR
#logging.level.org.hibernate.type.descriptor.sql=trace

spring.security.user.password=admin

slack.webhook.url=https://hooks.slack.com/services/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

logging.level.root=DEBUG
logging.level.org.springframework=DEBUG
logging.level.org.hibernate=DEBUG

eureka.client.serviceUrl.defaultZone=http://smithservices.jx-staging.34.66.57.149.nip.io/eureka
eureka.client.fetchRegistry=true
eureka.client.registerWithEureka=true
eureka.instance.preferIpAddress=true
# Ldap server access
server.connection-timeout=5000

ribbon.ReadTimeout=600000
ribbon.ConnectTimeout=600000
swagger.server.host=egate2.smithdrug.com

spring.ldap.urls=ldaps://portaldc2.smithportal.com:636/
spring.ldap.username=cn=bind4sdc,cn=users,dc=smithportal,dc=com
spring.ldap.password=B1nd45dc

sls.portal.username=PortalUser
sls.portal.password=?)&kXJg:h8L]2fJ
sls.portal.changePasswordURL=https://staging2.smithdrug.com/SDCWebServices/webengine/com/smithdrug/services/accountListService/Action!changePasswordExecute?

sql.fps.insertResetRequest=insert into portal.fps(ACCNO, CDATE, UDATE, EDATE, STATUS, FPSID , CLICK , EMAIL, ORG) values(?,?,?,?, ?,?,?,?,?)
sql.fps.updateResetRequest=update portal.fps set UDATE=?,STATUS=?,CLICK=? where ACCNO=?
sql.fps.updateExpiryRequest=update portal.fps set UDATE=?,STATUS=? where ACCNO=? and FPSID=?
sql.fps.deleteResetRequest=delete portal.fps where ACCNO=?
sql.fps.getAllResetRequest=select * from portal.fps
sql.fps.getCustResetRequest=select * from portal.fps where ACCNO=?
sql.fps.getUserInfo=select * from R37FILES.VARCUST where RMCUST=?
sql.fps.validateResetToken=select * from portal.fps where ACCNO=? and FPSID=? and ORG=? and STATUS!=?
sql.testCustomers=